generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(uuid())
  email       String    @unique
  password    String
  firstName   String
  lastName    String
  sections    Section[]
  header      Header?
  skills      String[]
  projects    Project[]
  languages   String[]
  experiences Experience[]
  education   Education[]
  award       Award[]
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  @@map("user")
}

model Header{
  id          String    @id @default(uuid())
  user        User      @relation(fields: [userId], references: [id])
  userId      String    @unique
  contact     String
  jobTitle    String
  CityCountry String
  linkedIn    String
  twitter     String
  bio         String
  @@map("header")
}

model Project{
  id          String    @id @default(uuid())
  user        User      @relation(fields: [userId], references: [id])
  userId      String    @unique
  name        String
  startDate   String
  endDate     String
  decsription String
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  @@map("project")
}

model Experience{
  id          String    @id @default(uuid())
  user        User      @relation(fields: [userId], references: [id])
  userId      String    @unique
  title       String
  company     String
  startDate   String
  endDate     String
  decsription String
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  @@map("experience")
}

model Education{
  id          String    @id @default(uuid())
  user        User      @relation(fields: [userId], references: [id])
  userId      String    @unique
  school      String
  certificate String
  startDate   String
  endDate     String
  decsription String
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  @@map("education")
}

model Award{
  id          String    @id @default(uuid())
  user        User      @relation(fields: [userId], references: [id])
  userId      String    @unique
  award       String
  decsription String
  created_at  DateTime  @default(now())
  updated_at  DateTime  @updatedAt
  @@map("award")
}

enum Section {
  HEADER
  SKILLS
  EXPERIENCE
  LANGUAGES
  EDUCATION
  CERTIFICATES
  PROJECTS
  AWARDS
}